{"version":3,"sources":["assets/pancake.jpg","assets/cold.jpg","assets/hot.jpg","assets/dessert.jpg","assets/snacks.jpg","assets/mugcake.jpg","assets/kebab.jpg","assets/hamburger.jpg","assets/hotdog.jpg","assets/wings.jpg","services/Service.js","Info.js","Recipes.js","NewRec.js","Categories.js","FirstPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FetchRecipes","a","fetch","method","result","ok","json","data","console","log","Error","FetchCategories","FetchIngredients","headers","body","JSON","stringify","Recepten","props","recepts","recept","map","id","key","src","pancake","name","Ingredients","description","tutorial","Ingreds","ingredient","ingredients","class","amount","Recipes","React","useState","setRecipe","useEffect","getIngredients","getRecipes","setingredient","Recipe","Ingredient","to","NewRec","IngredList","setIngredList","title","settitle","instructions","setinstructions","setdescription","className","onChange","ev","currentTarget","value","type","placeholder","onClick","newArray","push","rows","cols","AddRecipe","Categories","undefined","setCategory","Category","getCategories","cold","hot","dessert","snacks","FirstPage","href","App","path","component","exact","NewRecipes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a83f06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pancake.d59ea5f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cold.c20034cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hot.767d44b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dessert.67bd6ffe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snacks.7dadefb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mugcake.dea7d8f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kebab.c62d55a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.0f39eccb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotdog.91ead9f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wings.b7241620.jpg\";","export async function FetchRecipes() {\r\n    const result = await fetch(`/recipes`, {\r\n        method: \"GET\"\r\n    });\r\n\r\n    if (result.ok) {\r\n        const data = await result.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n    throw new Error(\"Kunde inte hämta data!\");\r\n}\r\n\r\nexport async function FetchCategories() {\r\n    const result = await fetch(`/categories`, {\r\n        method: \"GET\"\r\n    });\r\n\r\n    if (result.ok) {\r\n        const data = await result.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n    throw new Error(\"Kunde inte hämta data!\");\r\n}\r\n\r\nexport async function FetchIngredients() {\r\n    const result = await fetch(`/ingredients` , {\r\n        method: \"GET\"\r\n    });\r\n\r\n    if(result.ok) {\r\n        const data = await result.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n    throw new Error(\"Kunde inte hämta data!\");\r\n}\r\n\r\n\r\nexport async function AddRecipe(data) {\r\n    const result = await fetch(`/recipes`, {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n\r\n        });\r\n    if(result.ok) {\r\n        console.log(\"Added new recipe\")\r\n    } else {\r\n        throw new Error(\"Add failed\")\r\n    }\r\n}","import React from 'react';\r\nimport './Info.scss';\r\nimport mugcake from \"./assets/mugcake.jpg\";\r\nimport pancake from \"./assets/pancake.jpg\";\r\n\r\n\r\nexport function Recepten(props, ) {\r\n\r\n    \r\n\r\n    const recepts = props.recept.map(recept => \r\n        \r\n    <div id=\"RecipeBox\" key={recept.id}>\r\n        \r\n    <img src={pancake} id=\"recipeimg\"/>\r\n    <h1 id=\"Recipename\">{recept.name}</h1> \r\n    <h3 id=\"Ingredients\">{recept.Ingredients}</h3>\r\n    <h3 id=\"Recipedesc\">{recept.description}</h3>\r\n    <p id=\"Tut\">{recept.tutorial}</p>\r\n    </div>)\r\n   \r\n   let content = <div>\r\n    <div>\r\n    </div>\r\n    {recepts}\r\n</div>\r\n\r\n\r\nreturn content;\r\n}\r\n\r\n\r\nexport function Ingreds(props) {\r\n    const ingredient = props.ingredients.map(ingredients =>\r\n        <div id=\"ingBox\" key={ingredients.id}>\r\n            <h3 class=\"text\">{ingredients.name}</h3>\r\n            <h3 class=\"text\">{ingredients.amount}</h3>\r\n        </div>)\r\n\r\n        let content = <div>\r\n            <div>\r\n                {ingredient}\r\n            </div>\r\n        </div>\r\n\r\nreturn content;\r\n}","import React from 'react';\r\nimport './Recipes.scss';\r\nimport { FetchRecipes, FetchIngredients } from \"./services/Service.js\";\r\nimport { Recepten, Ingreds } from \"./Info.js\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport kebab from \"./assets/kebab.jpg\";\r\nimport hamburger from \"./assets/hamburger.jpg\";\r\nimport hotdog from \"./assets/hotdog.jpg\";\r\nimport wings from \"./assets/wings.jpg\";\r\n\r\nexport default function Recipes() {\r\n    const [recepts, setRecipe] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getIngredients();\r\n        getRecipes();\r\n    }, []);\r\n    const [ingredient, setingredient] = React.useState([])\r\n\r\n    async function getRecipes() {\r\n        const Recipe = await FetchRecipes();\r\n        setRecipe(Recipe);\r\n    }\r\n    async function getIngredients() {\r\n        const Ingredient = await FetchIngredients();\r\n        setingredient(Ingredient);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"Heros\">\r\n                <div id=\"Rear\">\r\n                    <header>\r\n                        <h1>Recipes</h1>\r\n                        <Link to=\"/NewRec\">\r\n                        <button id=\"new\" >NEW RECIPE</button>\r\n                        </Link>\r\n                        <div>\r\n                            \r\n                        <Ingreds ingredients = {ingredient}></Ingreds> <Recepten recept = {recepts}></Recepten>\r\n                            \r\n                            \r\n                        </div>\r\n                    </header>\r\n                    </div> \r\n\r\n                 \r\n                </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './NewRec.scss';\r\nimport { AddRecipe } from './services/Service';\r\n\r\nexport default function NewRec(props) {\r\n    function onLinkClick(id) {\r\n        props.onNavigate(id);\r\n    }\r\n\r\n    \r\n\r\n    function postres() {\r\n        console.log(title, description, instructions)\r\n        const compile = {\r\n            \"description\": description,\r\n            \"id\":0,\r\n            \"name\": title,\r\n            \"tutorial\": instructions\r\n            }\r\n            AddRecipe(compile);\r\n    }\r\n\r\n\r\n    const [IngredList, setIngredList] = React.useState([\r\n        \"\"\r\n    ]);\r\n\r\n    const [title, settitle] = React.useState(\"\")\r\n\r\n    const [instructions, setinstructions] = React.useState(\"\")\r\n\r\n    const [description, setdescription] = React.useState(\"\")\r\n\r\n\r\n    function TitleChanged(ev) {\r\n        settitle(ev.currentTarget.value)\r\n    }\r\n\r\n    function InstructionsChanged(ev) {\r\n        setinstructions(ev.currentTarget.value)\r\n    }\r\n\r\n    function DescriptionChanged(ev) {\r\n        setdescription(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"Hero\">\r\n                <div id=\"Page\">\r\n                    <h1>Add your recipe!</h1>\r\n                    <>\r\n                        <div className=\"Rform\">\r\n\r\n                            <h3>Title</h3>\r\n                            <input onChange={TitleChanged} value={title} className=\"Inputfield\" type=\"text\" placeholder=\"Title of recipe\" />\r\n\r\n                            <h3>\r\n                                Ingredients\r\n                            </h3>\r\n                            <div className=\"IngredientsInputWrap\">\r\n                                {IngredList.map((value) => {\r\n                                    return(<input type=\"text\" className=\"IInput\"\r\n                                    placeholder=\"Enter an ingredient\" />\r\n                            )\r\n                                    })}\r\n                            </div>\r\n                            <br />\r\n                            <button id=\"add\" onClick={AddI}>+</button>\r\n\r\n                            <h3>\r\n                                Instructions:\r\n                            </h3>\r\n\r\n                            <textarea onChange={InstructionsChanged} value={instructions} className=\"Instructions\" rows=\"5\" cols=\"60\" placeholder=\"How is your dish made?\" />\r\n                            <br />\r\n                            <h3>\r\n                                Description\r\n                            </h3>\r\n                            <textarea onChange={DescriptionChanged} value={description} className=\"Description\" rows=\"5\" cols=\"60\" placeholder=\"Tell us about your dish!\" />\r\n                            <br />\r\n                            <input type=\"submit\" id=\"Poster\" value=\"Upload\" onClick={postres}></input>\r\n\r\n                        </div>\r\n                    </>\r\n                </div>\r\n            </div>\r\n            <body>\r\n\r\n            </body>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n    function AddI() {\r\n        let newArray = [...IngredList];\r\n        newArray.push(\"\");\r\n        setIngredList(newArray);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport './Categories.scss';\r\nimport { FetchCategories } from \"./services/Service\";\r\nimport cold from \"./assets/cold.jpg\";\r\nimport hot from \"./assets/hot.jpg\";\r\nimport dessert from \"./assets/dessert.jpg\";\r\nimport snacks from \"./assets/snacks.jpg\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Categories() {\r\n    const [categories, setCategory] = React.useState(undefined);\r\n\r\n    async function getCategories() {\r\n        const Category = await FetchCategories();\r\n        setCategory(Category);\r\n\r\n    }\r\n    getCategories();\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"Hero\">\r\n                <div id=\"Rear\">\r\n                    <div class=\"container\">\r\n                        <div class=\"box\">\r\n\r\n                            <div class=\"imgbox\">\r\n                                <img src={cold} />\r\n                            </div>\r\n                            <Link to=\"/Recipes\">\r\n                                <div class=\"content\">\r\n                                    <h3>Cold Food</h3>\r\n                                    <p>Chilled foods perfect for servings that are going to \r\n                                        be out for a long time and aren't depending on warmth</p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div class=\"box\">\r\n                            <div class=\"imgbox\">\r\n                                <img src={hot} />\r\n                            </div>\r\n                            <Link to=\"/Recipes\">\r\n                                <div class=\"content\">\r\n                                    <h3>Hot Food</h3>\r\n                                    <p>Warm foods perfect served for a walking table, \r\n                                        preferably with the option to stay heated throughout</p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div class=\"box\">\r\n                            <div class=\"imgbox\">\r\n                                <img src={dessert} />\r\n                            </div>\r\n                            <Link to=\"/Recipes\">\r\n                                <div class=\"content\">\r\n                                    <h3>Dessert</h3>\r\n                                    <p>The perfect place to find the ultimate dessert \r\n                                        for an evening of nice food, or maybe just a piece of cake \r\n                                        to eat in front of the TV</p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div class=\"box\">\r\n                            <div class=\"imgbox\">\r\n                                <img src={snacks} />\r\n                            </div>\r\n                            <Link to=\"/Recipes\">\r\n                                <div class=\"content\">\r\n                                    <h3>Snacks</h3>\r\n                                    <p>The ultimate evening snack can be found here! </p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <body>\r\n            </body>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport './FirstPage.scss';\r\nimport { FetchRecipes } from './services/Service';\r\n\r\nexport default function FirstPage() {\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div id=\"Hero\">\r\n                <div id=\"Logger\">\r\n                    <h1>Welcome!</h1>     \r\n                    <h3 id=\"FPDesc\">\r\n                        Every recipe you could possibly \r\n                        want collected in one place, what else could you need? Start this experience by logging in below!\r\n                    </h3>\r\n                    <a id=\"Login\" \r\n                    href=\"https://github.com/login/oauth/authorize?client_id=c292a6020ce35b214c2e\">Log in here</a>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n//4c805c43cd2ee42e802b","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n \nimport Recipes from './Recipes';\nimport NewRecipes from './NewRec';\nimport Categories from './Categories';\nimport FirstPage from './FirstPage';\n\n\nclass App extends Component {\n  render() {\n//     const PageSwitchToRecipe = () => {\n//       setRenderedComponent(\n//         <Categories switchScene={PageSwitchToRecipe} />\n//       );\n// const [setRenderedComponent] = userState(\n//   <Categories switchScene={PageSwitchToRecipe}\n// )\n//     }\n\n    return (      \n       <BrowserRouter>\n        <div>\n            <Switch>\n             <Route path=\"/\" component={FirstPage} exact/>\n             <Route path=\"/Categories\" component={Categories}/>\n             <Route path=\"/Recipes\" component={Recipes}/>\n             <Route path=\"/NewRec\" component={NewRecipes}/>\n           </Switch>\n        </div> \n      </BrowserRouter>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport FirstPage from './FirstPage.js';\nimport NewRec from './NewRec.js';\nimport Categories from './Categories.js';\nimport Recipes from './Recipes.js';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}